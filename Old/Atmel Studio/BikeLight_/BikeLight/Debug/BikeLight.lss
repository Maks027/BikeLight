
BikeLight.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  0000016c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000005e6  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004fd  00000000  00000000  00000816  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001eb  00000000  00000000  00000d13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00000f00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000358  00000000  00000000  00000fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e2  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000013fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	1f c0       	rjmp	.+62     	; 0x42 <__bad_interrupt>
   4:	1e c0       	rjmp	.+60     	; 0x42 <__bad_interrupt>
   6:	1d c0       	rjmp	.+58     	; 0x42 <__bad_interrupt>
   8:	1c c0       	rjmp	.+56     	; 0x42 <__bad_interrupt>
   a:	1b c0       	rjmp	.+54     	; 0x42 <__bad_interrupt>
   c:	1a c0       	rjmp	.+52     	; 0x42 <__bad_interrupt>
   e:	19 c0       	rjmp	.+50     	; 0x42 <__bad_interrupt>
  10:	18 c0       	rjmp	.+48     	; 0x42 <__bad_interrupt>
  12:	3f c0       	rjmp	.+126    	; 0x92 <__vector_9>
  14:	16 c0       	rjmp	.+44     	; 0x42 <__bad_interrupt>
  16:	15 c0       	rjmp	.+42     	; 0x42 <__bad_interrupt>
  18:	61 c0       	rjmp	.+194    	; 0xdc <__vector_12>
  1a:	13 c0       	rjmp	.+38     	; 0x42 <__bad_interrupt>
  1c:	12 c0       	rjmp	.+36     	; 0x42 <__bad_interrupt>
  1e:	11 c0       	rjmp	.+34     	; 0x42 <__bad_interrupt>
  20:	10 c0       	rjmp	.+32     	; 0x42 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d1 e0       	ldi	r29, 0x01	; 1
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_clear_bss>:
  2e:	20 e0       	ldi	r18, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	01 c0       	rjmp	.+2      	; 0x38 <.do_clear_bss_start>

00000036 <.do_clear_bss_loop>:
  36:	1d 92       	st	X+, r1

00000038 <.do_clear_bss_start>:
  38:	a4 36       	cpi	r26, 0x64	; 100
  3a:	b2 07       	cpc	r27, r18
  3c:	e1 f7       	brne	.-8      	; 0x36 <.do_clear_bss_loop>
  3e:	58 d0       	rcall	.+176    	; 0xf0 <main>
  40:	59 c0       	rjmp	.+178    	; 0xf4 <_exit>

00000042 <__bad_interrupt>:
  42:	de cf       	rjmp	.-68     	; 0x0 <__vectors>

00000044 <initSystem>:
uint16_t readAdc()
{
	ADCSRA |= (1 << ADSC);
	while(ADCSRA & (1 << ADSC));
	return ADC;
}
  44:	d3 9a       	sbi	0x1a, 3	; 26
  46:	dc 9a       	sbi	0x1b, 4	; 27
  48:	c2 9a       	sbi	0x18, 2	; 24
  4a:	37 9a       	sbi	0x06, 7	; 6
  4c:	17 b8       	out	0x07, r1	; 7
  4e:	3f 9a       	sbi	0x07, 7	; 7
  50:	86 b1       	in	r24, 0x06	; 6
  52:	83 60       	ori	r24, 0x03	; 3
  54:	86 b9       	out	0x06, r24	; 6
  56:	08 9a       	sbi	0x01, 0	; 1
  58:	8a b3       	in	r24, 0x1a	; 26
  5a:	80 66       	ori	r24, 0x60	; 96
  5c:	8a bb       	out	0x1a, r24	; 26
  5e:	8f b5       	in	r24, 0x2f	; 47
  60:	82 6a       	ori	r24, 0xA2	; 162
  62:	8f bd       	out	0x2f, r24	; 47
  64:	8e b5       	in	r24, 0x2e	; 46
  66:	89 61       	ori	r24, 0x19	; 25
  68:	8e bd       	out	0x2e, r24	; 46
  6a:	88 ee       	ldi	r24, 0xE8	; 232
  6c:	93 e0       	ldi	r25, 0x03	; 3
  6e:	95 bd       	out	0x25, r25	; 37
  70:	84 bd       	out	0x24, r24	; 36
  72:	80 b7       	in	r24, 0x30	; 48
  74:	82 60       	ori	r24, 0x02	; 2
  76:	80 bf       	out	0x30, r24	; 48
  78:	83 b7       	in	r24, 0x33	; 51
  7a:	82 60       	ori	r24, 0x02	; 2
  7c:	83 bf       	out	0x33, r24	; 51
  7e:	8d e7       	ldi	r24, 0x7D	; 125
  80:	86 bf       	out	0x36, r24	; 54
  82:	89 b7       	in	r24, 0x39	; 57
  84:	82 60       	ori	r24, 0x02	; 2
  86:	89 bf       	out	0x39, r24	; 57
  88:	88 b1       	in	r24, 0x08	; 8
  8a:	8b 64       	ori	r24, 0x4B	; 75
  8c:	88 b9       	out	0x08, r24	; 8
  8e:	78 94       	sei
  90:	08 95       	ret

00000092 <__vector_9>:
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
  9e:	9f 93       	push	r25
  a0:	af 93       	push	r26
  a2:	bf 93       	push	r27
  a4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  a8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <_edata+0x1>
  ac:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <_edata+0x2>
  b0:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <_edata+0x3>
  b4:	01 96       	adiw	r24, 0x01	; 1
  b6:	a1 1d       	adc	r26, r1
  b8:	b1 1d       	adc	r27, r1
  ba:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  be:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_edata+0x1>
  c2:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <_edata+0x2>
  c6:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <_edata+0x3>
  ca:	bf 91       	pop	r27
  cc:	af 91       	pop	r26
  ce:	9f 91       	pop	r25
  d0:	8f 91       	pop	r24
  d2:	0f 90       	pop	r0
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	0f 90       	pop	r0
  d8:	1f 90       	pop	r1
  da:	18 95       	reti

000000dc <__vector_12>:
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	0f 90       	pop	r0
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	0f 90       	pop	r0
  ec:	1f 90       	pop	r1
  ee:	18 95       	reti

000000f0 <main>:

int main(void)
{
	initSystem();
  f0:	a9 df       	rcall	.-174    	; 0x44 <initSystem>
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <main+0x2>

000000f4 <_exit>:
  f4:	f8 94       	cli

000000f6 <__stop_program>:
  f6:	ff cf       	rjmp	.-2      	; 0xf6 <__stop_program>
